
- name: Install DS (Centos and RedOS)
  block:
    - name: Upgrade all packages
      apt:
        name: '*'
        state: latest


- name: add repo
  ansible.builtin.shell:
    cmd: echo "deb https://download.r7-office.ru/repo/debian squeeze main" | sudo tee /etc/apt/sources.list.d/r7-office.list

- name: add key
  ansible.builtin.shell:
    cmd: curl -s https://download.r7-office.ru/repo/gpgkey/r7-office.gpg.key | sudo apt-key add -


- name: Install postgresql 
  apt:
    name:
      - postgresql
      # - postgresql-server
    state: latest
    update_cache: true

- name: create db
  ansible.builtin.shell:
    cmd: sudo -i -u postgres psql -c "CREATE DATABASE r7office;"

- name: create user
  ansible.builtin.shell:
    cmd: sudo -i -u postgres psql -c "CREATE USER r7office WITH password 'r7office';"

- name: add privileges
  ansible.builtin.shell:
    cmd: sudo -i -u postgres psql -c "GRANT ALL privileges ON DATABASE r7office TO r7office;"

- name: install rabbitmq-server 
  apt:
    name: rabbitmq-server

- name: install nginx-extras 
  ansible.builtin.package:
    name: nginx-extras

- name: install redis-server 
  ansible.builtin.package:
    name: redis-server

- name: select pwd
  ansible.builtin.shell:
    cmd: sudo echo r7-office-documentserver-ee ds/db-pwd select r7office | sudo debconf-set-selections

- name: select user
  ansible.builtin.shell:
    cmd: sudo echo r7-office-documentserver-ee ds/db-user select r7office | sudo debconf-set-selections

- name: select name db
  ansible.builtin.shell:
    cmd: sudo echo r7-office-documentserver-ee ds/db-name select r7office | sudo debconf-set-selections

- name: install r7-office-documentserver-ee 
  ansible.builtin.package:
    name: r7-office-documentserver-ee

- name: Set the database host address
  ansible.builtin.shell:
    cmd: echo r7-office-documentserver-ee r7-office/db-host string localhost | sudo debconf-set-selections

- name: database user installation
  ansible.builtin.shell:
    cmd: echo r7-office-documentserver-ee r7-office/db-user string r7office | sudo debconf-set-selections

- name: Set database user password
  ansible.builtin.shell:
    cmd: echo r7-office-documentserver-ee r7-office/db-pwd password r7office | debconf-set-selections

- name: database name setup
  ansible.builtin.shell:
    cmd: echo r7-office-documentserver-ee r7-office/db-name string r7office | sudo debconf-set-selections

- name: sets the host name for RabbitMQ
  ansible.builtin.shell:
    cmd: echo r7-office-documentserver-ee r7-office/rabbitmq-host string localhost | sudo debconf-set-selections

- name: RabbitMQ user installation
  ansible.builtin.shell:
    cmd: echo r7-office-documentserver-ee r7-office/rabbitmq-user string guest | sudo debconf-set-selections

- name: Set RabbitMQ user password
  ansible.builtin.shell:
    cmd: echo r7-office-documentserver-ee r7-office/rabbitmq-pwd password guest | sudo debconf-set-selections






    # - name: Install ca-certificates (RedOS7.2)
    #   apt:
    #     name: ca-certificates
    #     state: latest


    # - name: Copy a file to /etc/apt.repos.d/nginx.repo (RedOS7.3)
    #   ansible.builtin.copy:
    #     src: nginx8.repo
    #     dest: /etc/apt/sources.list.d/nginx.list
    #     owner: root
    #     group: root
    #     mode: '0644'


    # - name: Install nginx (Centos7)
    #   apt:
    #     update_cache: yes
    #     name: nginx
    #     state: latest

    # - name: Copy a file to /etc/nginx/nginx.conf
    #   ansible.builtin.copy:
    #     src: nginx.conf
    #     dest: /etc/nginx/nginx.conf
    #     owner: root
    #     group: root
    #     mode: '0644'

    # - name: Install postgresql 
    #   apt:
    #     name:
    #       - postgresql
    #       - postgresql-server
    #     state: latest


    # - name: Initdb
    #   ansible.builtin.shell:
    #     cmd: service postgresql initdb
    #   ignore_errors: yes 

    # - name: Chkconfig
    #   ansible.builtin.shell:
    #     cmd: chkconfig postgresql on

    # - name: Copy a file to /var/lib/pgsql/data/pg_hba.conf
    #   ansible.builtin.copy:
    #     src: pg_hba.conf
    #     dest: /var/lib/pgsql/data/pg_hba.conf
    #     owner: postgres
    #     group: postgres
    #     mode: '0600'

    # - name: Restart service postgresql
    #   ansible.builtin.service:
    #     name: postgresql
    #     state: restarted
    #     enabled: yes

    # - name: Create db
    #   ansible.builtin.shell:
    #     cmd: sudo -u postgres psql -c "CREATE DATABASE r7office;"

    # - name: Create user in postgresql
    #   ansible.builtin.shell:
    #     cmd: sudo -u postgres psql -c "CREATE USER r7office WITH password 'r7office';"

    # - name: Add privileges
    #   ansible.builtin.shell:
    #     cmd: sudo -u postgres psql -c "GRANT ALL privileges ON DATABASE r7office TO r7office;"

    # - name: Install redis (Centos7)
    #   apt:
    #     name: redis
    #     state: latest

    # - name: Restart service redis
    #   ansible.builtin.service:
    #     name: redis
    #     state: started
    #     enabled: yes

    # - name: Install rabbitmq-server (Centos7)
    #   apt:
    #     name: rabbitmq-server
    #     state: latest

    # - name: Restart service rabbitmq
    #   ansible.builtin.service:
    #     name: rabbitmq-server
    #     state: started
    #     enabled: yes     

    # - name: Download msttcore-fonts
    #   ansible.builtin.get_url:
    #     url: https://li.nux.ro/download/nux/dextop/el7/x86_64/msttcore-fonts-installer-2.6-1.noarch.rpm
    #     dest: /tmp/msttcore-fonts-installer-2.6-1.noarch.rpm
    #     validate_certs: no

    # - name: Install msttcore-fonts
    #   ansible.builtin.shell:
    #     cmd: sudo apt localinstall /tmp/msttcore-fonts-installer-2.6-1.noarch.rpm -y
        
    # - name: Intall DS
    #   apt:
    #     name: "{{ url_ds_redhat }}"
    #     state: present
    #     disable_gpg_check: yes

    # - name: Template a file to /usr/bin/documentserver-configure.sh
    #   ansible.builtin.template:
    #     src: usr/bin/documentserver-configure.sh
    #     dest: /usr/bin/documentserver-configure.sh
    #     owner: root
    #     group: root
    #     mode: '0744'

    # - name: Started supervisord 
    #   ansible.builtin.service:
    #     name:  ds-docservice.service #supervisord
    #     state: started
    #     enabled: yes
    # - name: Started nginx
    #   ansible.builtin.service:
    #     name: nginx
    #     state: started
    #     enabled: yes
    #   ignore_errors: yes

    # - name: Run documentserver-configure.sh
    #   ansible.builtin.shell:
    #     cmd: bash documentserver-configure.sh

    # - name: Copy a file to /etc/selinux/config
    #   ansible.builtin.copy:
    #     src: config
    #     dest: /etc/selinux/config
    #     owner: root
    #     group: root
    #     mode: '0744'
    # - name: Disable selinux
    #   lineinfile:
    #       path:  /etc/selinux/config
    #       regexp: 'SELINUX=' 
    #       line: 'SELINUX=disabled'
    # - name: Copy the licence.lic file
    #   template:
    #     src: "license.lic"
    #     dest: "/var/www/r7-office/Data/license.lic"
    # - name: reboot
    #   ansible.builtin.reboot:
