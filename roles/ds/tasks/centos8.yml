---
- name: Install DS (Centos and RedOS)
  block:
    - name: Upgrade all packages
      yum:
        name: '*'
        state: latest
    - name: Install ca-certificates 
      yum:
        name: ca-certificates
        state: latest
    - name: Install nginx 
      yum:
        name: nginx
        state: latest

    - name: Copy a file to /etc/nginx/nginx.conf
      ansible.builtin.copy:
        src: nginx.conf
        dest: /etc/nginx/nginx.conf
        owner: root
        group: root
        mode: '0644'

    - name: Install postgresql 
      yum:
        name:
          - postgresql
          - postgresql-server
        state: latest

    - name: Initdb
      ansible.builtin.shell:
        cmd: service postgresql initdb
      ignore_errors: yes 

    - name: Chkconfig
      ansible.builtin.shell:
        cmd: chkconfig postgresql on

    - name: Copy a file to /var/lib/pgsql/data/pg_hba.conf
      ansible.builtin.copy:
        src: pg_hba.conf
        dest: /var/lib/pgsql/data/pg_hba.conf
        owner: postgres
        group: postgres
        mode: '0600'

    - name: Restart service postgresql
      ansible.builtin.service:
        name: postgresql
        state: restarted
        enabled: yes

    - name: Create db
      ansible.builtin.shell:
        cmd: sudo -u postgres psql -c "CREATE DATABASE {{ DS_db_psql }};"

    - name: Create user in postgresql
      ansible.builtin.shell:
        cmd: sudo -u postgres psql -c "CREATE USER {{ DS_psql_user }} WITH password '{{ DS_psql_pass }}';"

    - name: Add privileges
      ansible.builtin.shell:
        cmd: sudo -u postgres psql -c "GRANT ALL privileges ON DATABASE {{ DS_db_psql }} TO {{ DS_psql_user }};"

    - name: Install redis
      yum:
        name: redis
        state: latest

    - name: Restart service redis
      ansible.builtin.service:
        name: redis
        state: started
        enabled: yes


    - name: dowload and install rpm for erlang (Centos8)
      ansible.builtin.shell:
        cmd: curl -s https://packagecloud.io/install/repositories/rabbitmq/erlang/script.rpm.sh | sudo bash

    - name: clean all (Centos8)
      ansible.builtin.shell:
        cmd: yum clean all

    - name: makecache (Centos8)
      ansible.builtin.shell:
        cmd: yum -y makecache

    - name: install erlang (Centos8)
      yum:
        name: erlang

    - name: wget script.rpm.sh (Centos8)
      ansible.builtin.shell:
        cmd: wget -O /tmp/script.rpm.sh https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.rpm.sh
      
    - name: chmod 777 script.rpm.sh (Centos8)
      ansible.builtin.shell:
        cmd: chmod 777 /tmp/script.rpm.sh

    - name: run script.rpm.sh (Centos8)
      ansible.builtin.shell:
        cmd: /tmp/script.rpm.sh




- name: install rabbitmq-server (Centos8)
  yum:
    name: rabbitmq-server
  when: ansible_facts['distribution_major_version'] == "8"

- name: Restart service rabbitmq
  ansible.builtin.service:
    name: rabbitmq-server
    state: started
    enabled: yes     

- name: Download msttcore-fonts
  ansible.builtin.get_url:
    url: https://li.nux.ro/download/nux/dextop/el7/x86_64/msttcore-fonts-installer-2.6-1.noarch.rpm
    dest: /tmp/msttcore-fonts-installer-2.6-1.noarch.rpm
    validate_certs: no

- name: Install msttcore-fonts
  ansible.builtin.shell:
    cmd: sudo yum localinstall /tmp/msttcore-fonts-installer-2.6-1.noarch.rpm -y
    
- name: Intall DS
  yum:
    name: "{{ url_ds_redhat }}"
    state: present
    disable_gpg_check: yes

- name: Template a file to /usr/bin/documentserver-configure.sh
  ansible.builtin.template:
    src: usr/bin/documentserver-configure.sh
    dest: /usr/bin/documentserver-configure.sh
    owner: root
    group: root
    mode: '0744'

- name: Started supervisord 
  ansible.builtin.service:
    name:  ds-docservice.service #supervisord
    state: started
    enabled: yes
- name: Started nginx
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: yes
  ignore_errors: yes

- name: Run documentserver-configure.sh
  ansible.builtin.shell:
    cmd: bash documentserver-configure.sh

    # - name: Settings firewalld
    #   ignore_errors: yes
    #   block:
    #     - name: Install Firewalld
    #       yum: 
    #         name: firewalld
    #         state: latest
    #     - name: Add-port=80/tcp
    #       ansible.builtin.shell:
    #         cmd: firewall-cmd --zone=public --add-port=80/tcp --permanent

    #     - name: Add-port=2235/tcp
    #       ansible.builtin.shell:
    #         cmd: firewall-cmd --zone=public --add-port=2235/tcp --permanent

    #     - name: Add-port=22/tcp
    #       ansible.builtin.shell:
    #         cmd: firewall-cmd --zone=public --add-port=22/tcp --permanent

    #     - name: Firewall reload
    #       ansible.builtin.shell:
    #         cmd: firewall-cmd --reload

- name: Copy a file to /etc/selinux/config
  ansible.builtin.copy:
    src: config
    dest: /etc/selinux/config
    owner: root
    group: root
    mode: '0744'
- name: Disable selinux
  lineinfile:
      path:  /etc/selinux/config
      regexp: 'SELINUX=' 
      line: 'SELINUX=disabled'
- name: Copy the licence.lic file
  template:
    src: "license.lic"
    dest: "/var/www/r7-office/Data/license.lic" 
- name: reboot
  ansible.builtin.reboot:
